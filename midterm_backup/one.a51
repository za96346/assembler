    ORG 0000H
LOOP:   MOV P1, #11111110B
        JNB P2.0, TWO_START
        JNB P2.1, FOUR_START
        JNB P2.2, FIVE_START
        JNB p2.3  EIGHT_START0

        MOV P1, #11111101B
        JNB P2.0, EIGHT_START
        JNB P2.1, EIGHT_START
        JNB P2.2, EIGHT_START
        JNB P2.3, EIGHT_START

        AJMP LOOP

EIGHT_START0:	AJMP	EIGHT_START

; two
TWO_START:	MOV	R0,	#OK-TABLE+1
		MOV	DPTR,#TABLE
		MOV	R1,#00H

LOOPTWO:	MOV	A,R1
		MOVC	A,@A+DPTR
		MOV	P0,A
		ACALL	DELAY
		INC	R1
		DJNZ	R0,LOOPTWO
		AJMP	TWO_START

DELAY:	MOV	R5,#1
DL1:	MOV	R6,#250
DL2:	MOV	R7,#200
DL3:	DJNZ	R7,DL3
		DJNZ	R6,DL2
		DJNZ	R5,DL1
		RET

;FIVE start
FIVE_START:	MOV 	R0,	#FIVE_OK - FIVE_TABLE + 1
		MOV 	DPTR, 	#FIVE_TABLE
		MOV		R1,	#00H

        AJMP FIVE_LOOP


EIGHT_START:  MOV R6, #83
        MOV R5, #200
        ACALL SOUND
        ACALL D05S
        AJMP  EIGHT_START

TABLE:	DB	10000100B
		DB	00000100B
		DB	10000100B0
		DB	00000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B
		DB	10000100B

		DB	10001000B
        DB	10001000B
        DB	10001000B
        DB	10001000B
		DB	10001000B
        DB	10001000B

		DB	00100000B
		DB	00110000B
		DB	00100000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B
		DB	00110000B

		DB	01010000B
        DB	01010000B
        DB	01010000B
        DB	01010000B
		DB	01010000B
        DB	01010000B

OK:		DB	00000000B
;two end

;FOUR start
FOUR_START:	MOV 	R1,	#07H
		MOV 	A, 	#00000001B

LEFT: 	MOV 	P0, 	A
		ACALL FOUR_DELAY
		RL 	A
		DJNZ 	R1, 	LEFT
;
		MOV 	R1,  	#07H
		MOV 	A, 	#10000000B

RIGHT: 	MOV 	P0,	A
		ACALL FOUR_DELAY
		RR 	A
		DJNZ 	R1,	RIGHT
		AJMP 	FOUR_START

FOUR_DELAY: 	MOV 	R6, 	#250
FOUR_DL1: 		MOV 	R7, 	#200
FOUR_DL2: 		DJNZ 	R7, 	FOUR_DL2
		DJNZ 	R6, 	FOUR_DL1
		RET
;FOUR end

FIVE_LOOP:	MOV		A, 	R1
		MOVC 	A, @A+DPTR
		MOV		P0,	A
		ACALL	FIVE_DELAY
		INC		R1

		DJNZ	R0, FIVE_LOOP
		AJMP	FIVE_START

FIVE_DELAY:	MOV		R5, #2
FIVE_DL1:	MOV		R6, #250
FIVE_DL2:	MOV		R7,	#200
FIVE_DL3:	DJNZ 	R7, FIVE_DL3
		DJNZ	R6, FIVE_DL2
		DJNZ	R5, FIVE_DL1
		RET

FIVE_TABLE:	DB		10000001B
		DB		11000011B
		DB		11100111B
		DB		11111111B
		DB		11100111B
		DB		11000011B
		DB		10000001B
		DB		00000000B

		DB		10000001B
		DB		11000011B
		DB		11100111B
		DB		11111111B
		DB		11100111B
		DB		11000011B
		DB		10000001B
		DB		00000000B

		DB		11111111B
		DB		00000000B
		DB		11111111B
FIVE_OK:		DB		00000000B
;FIVE end

;eight 


SOUND:  CLR     P2.6
        ACALL   EIGHT_DELAY
        SETB    P2.6
        ACALL   EIGHT_DELAY
        DJNZ    R5, SOUND
        RET
EIGHT_DELAY:  MOV     B, R6
EIGHT_DL:     MOV     R7, #6
        DJNZ    R7, $
        DJNZ    R6, EIGHT_DL
        MOV     R6, B
        RET
D05S:   MOV     R5, #5
EIGHT_DL1:    MOV     R6, #250
EIGHT_DL2:    MOV     R7, #200
EIGHT_DL3:    DJNZ    R7, EIGHT_DL3
        DJNZ    R6, EIGHT_DL2
        DJNZ    R5, EIGHT_DL1
        RET
